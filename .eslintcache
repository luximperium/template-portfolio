[{"G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\index.js":"1","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\reportWebVitals.js":"2","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\App.js":"3","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\components\\SiteHeader.js":"4","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\pages\\Home.js":"5","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\pages\\Store.js":"6","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\pages\\Contact.js":"7","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\pages\\About.js":"8","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\pages\\Blog.js":"9","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\environments\\environments.js":"10"},{"size":641,"mtime":1611202711348,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":9712,"mtime":1612711732817,"results":"14","hashOfConfig":"12"},{"size":1162,"mtime":1613420833689,"results":"15","hashOfConfig":"12"},{"size":5693,"mtime":1612642051124,"results":"16","hashOfConfig":"12"},{"size":479,"mtime":1611099872031,"results":"17","hashOfConfig":"12"},{"size":483,"mtime":1611099878353,"results":"18","hashOfConfig":"12"},{"size":5693,"mtime":1611251088852,"results":"19","hashOfConfig":"12"},{"size":5693,"mtime":1611251084455,"results":"20","hashOfConfig":"12"},{"size":276,"mtime":1613420811636,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"slggce",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\index.js",["49"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <div className=\"root\">\n      <App />\n      </div>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["50","51"],"G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\reportWebVitals.js",[],"G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\App.js",["52","53","54"],"import React, { useEffect, useState } from \"react\";\nimport SiteHeader from \"./components/SiteHeader\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  NavLink,\n} from \"react-router-dom\";\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider,\n  Grid,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Drawer,\n  List,\n  Hidden,\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport CommentTwoToneIcon from \"@material-ui/icons/CommentTwoTone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport clsx from \"clsx\";\nimport Home from \"./pages/Home\";\nimport Store from \"./pages/Store\";\nimport Email from \"./pages/Contact\";\nimport About from \"./pages/About\";\nimport Blog from \"./pages/Blog\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#e57373\",\n      dark: \"#000000\",\n    },\n    secondary: {\n      main: \"#ffcc80\",\n    },\n  },\n  spacing: [0, 4, 8, 16, 32, 64],\n});\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.primary.dark,\n  },\n  siteHeaderComponent: {},\n  mainHeader: {\n    position: \"fixed\",\n    width: \"100vw\",\n  },\n  mainContent: {\n    position: \"fixed\",\n    zIndex: \"-1\",\n    transform: \"translateY(124px)\",\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.primary.main,\n  },\n  nav: {\n    zIndex: \"1\",\n  },\n  drawer: {\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    maxWidth: \"10vw\",\n    height: \"100vh\",\n    background: theme.palette.secondary.light,\n    color: \"black\",\n  },\n  drawerContainer: {\n    overflow: \"hidden\",\n  },\n  icon: {\n    color: \"black\",\n  },\n  mainSpace: {\n    transform: \"translateY(64px)\",\n    color: \"white\",\n    backgroundColor: theme.palette.primary.main,\n    height: \"100vh\",\n    paddingLeft: \"-20px\",\n    paddingRight: \"59px\",\n  },\n  firstClass: {\n    backgroundColor: theme.palette.primary.main,\n    paddingLeft: \"0vw\",\n    transition: theme.transitions.create(\"paddingLeft\", {\n      easing: theme.transitions.easing.easeIn,\n      duration: \"1s\",\n    }),\n    minWidth: \"100vw\",\n    transition: theme.transitions.create(\"minWidth\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: \"1s\",\n    }),\n  },\n  secondClass: {\n    backgroundColor: theme.palette.primary.main,\n    paddingLeft: \"10vw\",\n    transition: theme.transitions.create(\"paddingLeft\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: \"1s\",\n    }),\n    minWidth: \"100vw\",\n    transition: theme.transitions.create(\"minWidth\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: \"1s\",\n    }),\n  },\n  li: {\n    marginRight: \"-32px\",\n    marginLeft: \"-3px\"\n  },\n  liText: {\n    marginLeft: \"32px\",\n    marginRight: \"32px\"\n  },\n  main: {\n    overflowY: \"scroll\"\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  const [text, setText] = useState(\"\");\n\n  const toggleDrawer = () => {\n    setDrawer(!drawer);\n  };\n\n  useEffect(() => {\n    if (window.location.pathname === \"/\") {\n      window.location.pathname = \"/home\"\n    }\n\n    let pathname = window.location.pathname;\n\n    if (window.location.pathname === \"/\") {\n      setText(\"Home\");\n    } else {\n      let pageTitle = pathname.replace(\"/\", \"\");\n\n      setText(pageTitle.charAt(0).toUpperCase() + pageTitle.slice(1));\n    }\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <div className={classes.mainHeader}>\n            <Grid container direction=\"row\">\n              <Grid item xs={12}>\n                <SiteHeader className={classes.siteHeaderComponent} />\n              </Grid>\n              <Grid item xs={12}>\n                <AppBar\n                  className={classes.nav}\n                  position=\"static\"\n                  color=\"secondary\"\n                >\n                  <Toolbar>\n                    <IconButton\n                      edge=\"start\"\n                      color=\"inherit\"\n                      aria-label=\"menu\"\n                      onClick={() => toggleDrawer()}\n                    >\n                      <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap color=\"inherit\">\n                      {text}\n                    </Typography>\n                  </Toolbar>\n                </AppBar>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n        <div className={classes.mainContent}>\n          <div className={classes.appBar}>\n            <Grid item xs={3}>\n              <Drawer\n                variant=\"persistent\"\n                className={classes.drawer}\n                open={drawer}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n              >\n                <Toolbar />\n                <div className={classes.drawerContainer}>\n                  <List>\n                    {[\n                      { icon: <HomeIcon />, text: \"Home\", link: \"home\" },\n                      { icon: <InfoIcon />, text: \"About\", link: \"about\" },\n                      { icon: <StoreIcon />, text: \"Store\", link: \"store\" },\n                      {\n                        icon: <CommentTwoToneIcon />,\n                        text: \"Blog\",\n                        link: \"blog\",\n                      },\n                    ].map((nav, index) => (\n                      <NavLink\n                        onClick={() => setText(nav.text)}\n                        className={classes.link}\n                        strict\n                        exact\n                        key={`/${nav.link}`}\n                        to={`/${nav.link}`}\n                      >\n                        <ListItem button key={nav.text}>\n                          <ListItemIcon\n                            classes={{\n                              root: \n                                classes.li\n                            }}\n                          >\n                            {nav.icon}\n                          </ListItemIcon>\n                          <Hidden only={[\"sm\", \"xs\", \"md\"]}>\n                            <ListItemText className={classes.liText} primary={nav.text} />\n                          </Hidden>\n                        </ListItem>\n                      </NavLink>\n                    ))}\n                  </List>\n                  <Divider />\n                  <List>\n                    {[\n                      { icon: <EmailIcon />, text: \"Email\", link: \"email\" },\n                    ].map((nav, index) => (\n                      <NavLink\n                        onClick={() => setText(nav.text)}\n                        className={classes.link}\n                        strict\n                        exact\n                        key={`/${nav.link}`}\n                        to={`/${nav.link}`}\n                      >\n                        <ListItem button key={nav.text}>\n                          <ListItemIcon\n                            classes={{\n                              root: \n                                classes.li\n                            }}\n                          >\n                            {nav.icon}\n                          </ListItemIcon>\n                          <Hidden only={[\"sm\", \"xs\", \"md\"]}>\n                            <ListItemText className={classes.liText} primary={nav.text} />\n                          </Hidden>\n                        </ListItem>\n                      </NavLink>\n                    ))}\n                  </List>\n                </div>\n              </Drawer>\n            </Grid>\n          </div>\n          <div className={classes.main}>\n          <main\n            className={clsx(classes.firstClass, {\n              [classes.secondClass]: drawer,\n            })}\n          >\n            <Route\n              render={({ location }) => (\n                <TransitionGroup>\n                  <CSSTransition\n                    key={location.key}\n                    classNames=\"fade\"\n                    timeout={300}\n                  >\n                    <div className={classes.mainSpace}>\n                      <Switch location={location}>\n                        <Route exact path=\"/home\">\n                          <div>\n                            <Home />\n                          </div>\n                        </Route>\n                        <Route exact path=\"/about\">\n                          <div>\n                            <About />\n                          </div>\n                        </Route>\n                        <Route exact path=\"/store\">\n                          <div>\n                            <Store />\n                          </div>\n                        </Route>\n                        <Route exact path=\"/blog\">\n                          <div>\n                            <Blog />\n                          </div>\n                        </Route>\n                        <Route exact path=\"/email\">\n                          <div>\n                            <Email />\n                          </div>\n                        </Route>\n                      </Switch>\n                    </div>\n                  </CSSTransition>\n                </TransitionGroup>\n              )}\n            />\n          </main>\n          </div>\n        </div>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\components\\SiteHeader.js",["55","56","57","58"],"G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\pages\\Home.js",["59","60","61","62","63","64","65","66"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  CardActionArea,\r\n  CardActions,\r\n  Button,\r\n  Grid,\r\n  Hidden\r\n} from \"@material-ui/core\";\r\nimport \"../App.css\";\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport \"@fontsource/roboto\";\r\n\r\nfunction Home(props) {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    card: {\r\n      width: \"fit-content\",\r\n      backgroundColor: theme.palette.secondary.light,\r\n      margin: theme.spacing(4),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid direction=\"row\" container>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component=\"img\"\r\n                alt=\"Contemplative Reptile\"\r\n                height=\"140\"\r\n                image=\"https://c402277.ssl.cf1.rackcdn.com/photos/18435/images/hero_full/Medium_WW267491.jpg?1578425217\"\r\n                title=\"Blog Sample\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Lizard\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Lizards are a widespread group of squamate reptiles, with over\r\n                  6,000 species, ranging across all continents except Antarctica\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Share\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component=\"img\"\r\n                alt=\"Contemplative Reptile\"\r\n                height=\"140\"\r\n                image=\"https://c402277.ssl.cf1.rackcdn.com/photos/18435/images/hero_full/Medium_WW267491.jpg?1578425217\"\r\n                title=\"Blog Sample\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Lizard\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Lizards are a widespread group of squamate reptiles, with over\r\n                  6,000 species, ranging across all continents except Antarctica\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Share\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component=\"img\"\r\n                alt=\"Contemplative Reptile\"\r\n                height=\"140\"\r\n                image=\"https://c402277.ssl.cf1.rackcdn.com/photos/18435/images/hero_full/Medium_WW267491.jpg?1578425217\"\r\n                title=\"Blog Sample\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Lizard\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Lizards are a widespread group of squamate reptiles, with over\r\n                  6,000 species, ranging across all continents except Antarctica\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Share\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component=\"img\"\r\n                alt=\"Contemplative Reptile\"\r\n                height=\"140\"\r\n                image=\"https://c402277.ssl.cf1.rackcdn.com/photos/18435/images/hero_full/Medium_WW267491.jpg?1578425217\"\r\n                title=\"Blog Sample\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Lizard\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Lizards are a widespread group of squamate reptiles, with over\r\n                  6,000 species, ranging across all continents except Antarctica\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Share\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\pages\\Store.js",["67","68","69","70","71","72"],"import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\r\nimport \"../App.css\";\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport \"@fontsource/roboto\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nfunction Store() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"view\">\r\n    <Typography variant=\"h1\">5</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Store;\r\n","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\pages\\Contact.js",["73","74","75","76","77","78"],"import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\r\nimport \"../App.css\";\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport \"@fontsource/roboto\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nfunction Contact() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"view\">\r\n    <Typography variant=\"h1\">3</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\pages\\About.js",["79","80","81","82","83","84","85","86"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  CardActionArea,\r\n  CardActions,\r\n  Button,\r\n  Grid,\r\n  Hidden\r\n} from \"@material-ui/core\";\r\nimport \"../App.css\";\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport \"@fontsource/roboto\";\r\n\r\nfunction Blog(props) {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    card: {\r\n      width: \"fit-content\",\r\n      backgroundColor: theme.palette.secondary.light,\r\n      margin: theme.spacing(4),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid direction=\"row\" container>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component=\"img\"\r\n                alt=\"Contemplative Reptile\"\r\n                height=\"140\"\r\n                image=\"https://c402277.ssl.cf1.rackcdn.com/photos/18435/images/hero_full/Medium_WW267491.jpg?1578425217\"\r\n                title=\"Blog Sample\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Lizard\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Lizards are a widespread group of squamate reptiles, with over\r\n                  6,000 species, ranging across all continents except Antarctica\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Share\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component=\"img\"\r\n                alt=\"Contemplative Reptile\"\r\n                height=\"140\"\r\n                image=\"https://c402277.ssl.cf1.rackcdn.com/photos/18435/images/hero_full/Medium_WW267491.jpg?1578425217\"\r\n                title=\"Blog Sample\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Lizard\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Lizards are a widespread group of squamate reptiles, with over\r\n                  6,000 species, ranging across all continents except Antarctica\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Share\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component=\"img\"\r\n                alt=\"Contemplative Reptile\"\r\n                height=\"140\"\r\n                image=\"https://c402277.ssl.cf1.rackcdn.com/photos/18435/images/hero_full/Medium_WW267491.jpg?1578425217\"\r\n                title=\"Blog Sample\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Lizard\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Lizards are a widespread group of squamate reptiles, with over\r\n                  6,000 species, ranging across all continents except Antarctica\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Share\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component=\"img\"\r\n                alt=\"Contemplative Reptile\"\r\n                height=\"140\"\r\n                image=\"https://c402277.ssl.cf1.rackcdn.com/photos/18435/images/hero_full/Medium_WW267491.jpg?1578425217\"\r\n                title=\"Blog Sample\"\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Lizard\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Lizards are a widespread group of squamate reptiles, with over\r\n                  6,000 species, ranging across all continents except Antarctica\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Share\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Blog;\r\n","G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\pages\\Blog.js",["87","88","89","90","91","92","93","94"],"G:\\OneDrive\\Desktop\\WebDev\\Templates\\template-portfolio\\src\\environments\\environments.js",["95"],{"ruleId":"96","severity":1,"message":"97","line":6,"column":35,"nodeType":"98","messageId":"99","endLine":6,"endColumn":43},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"96","severity":1,"message":"104","line":4,"column":20,"nodeType":"98","messageId":"99","endLine":4,"endColumn":26},{"ruleId":"105","severity":1,"message":"106","line":108,"column":5,"nodeType":"107","messageId":"108","endLine":108,"endColumn":15},{"ruleId":"105","severity":1,"message":"106","line":121,"column":5,"nodeType":"107","messageId":"108","endLine":121,"endColumn":15},{"ruleId":"96","severity":1,"message":"109","line":2,"column":18,"nodeType":"98","messageId":"99","endLine":2,"endColumn":25},{"ruleId":"96","severity":1,"message":"110","line":2,"column":39,"nodeType":"98","messageId":"99","endLine":2,"endColumn":49},{"ruleId":"96","severity":1,"message":"111","line":4,"column":10,"nodeType":"98","messageId":"99","endLine":4,"endColumn":24},{"ruleId":"96","severity":1,"message":"112","line":4,"column":38,"nodeType":"98","messageId":"99","endLine":4,"endColumn":51},{"ruleId":"96","severity":1,"message":"113","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"114","line":1,"column":28,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"115","line":3,"column":3,"nodeType":"98","messageId":"99","endLine":3,"endColumn":9},{"ruleId":"96","severity":1,"message":"109","line":4,"column":3,"nodeType":"98","messageId":"99","endLine":4,"endColumn":10},{"ruleId":"96","severity":1,"message":"110","line":6,"column":3,"nodeType":"98","messageId":"99","endLine":6,"endColumn":13},{"ruleId":"96","severity":1,"message":"116","line":14,"column":3,"nodeType":"98","messageId":"99","endLine":14,"endColumn":9},{"ruleId":"96","severity":1,"message":"111","line":17,"column":10,"nodeType":"98","messageId":"99","endLine":17,"endColumn":24},{"ruleId":"96","severity":1,"message":"112","line":17,"column":38,"nodeType":"98","messageId":"99","endLine":17,"endColumn":51},{"ruleId":"96","severity":1,"message":"115","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":16},{"ruleId":"96","severity":1,"message":"109","line":2,"column":18,"nodeType":"98","messageId":"99","endLine":2,"endColumn":25},{"ruleId":"96","severity":1,"message":"110","line":2,"column":39,"nodeType":"98","messageId":"99","endLine":2,"endColumn":49},{"ruleId":"96","severity":1,"message":"111","line":4,"column":10,"nodeType":"98","messageId":"99","endLine":4,"endColumn":24},{"ruleId":"96","severity":1,"message":"112","line":4,"column":38,"nodeType":"98","messageId":"99","endLine":4,"endColumn":51},{"ruleId":"96","severity":1,"message":"117","line":12,"column":9,"nodeType":"98","messageId":"99","endLine":12,"endColumn":16},{"ruleId":"96","severity":1,"message":"115","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":16},{"ruleId":"96","severity":1,"message":"109","line":2,"column":18,"nodeType":"98","messageId":"99","endLine":2,"endColumn":25},{"ruleId":"96","severity":1,"message":"110","line":2,"column":39,"nodeType":"98","messageId":"99","endLine":2,"endColumn":49},{"ruleId":"96","severity":1,"message":"111","line":4,"column":10,"nodeType":"98","messageId":"99","endLine":4,"endColumn":24},{"ruleId":"96","severity":1,"message":"112","line":4,"column":38,"nodeType":"98","messageId":"99","endLine":4,"endColumn":51},{"ruleId":"96","severity":1,"message":"117","line":12,"column":9,"nodeType":"98","messageId":"99","endLine":12,"endColumn":16},{"ruleId":"96","severity":1,"message":"113","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"114","line":1,"column":28,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"115","line":3,"column":3,"nodeType":"98","messageId":"99","endLine":3,"endColumn":9},{"ruleId":"96","severity":1,"message":"109","line":4,"column":3,"nodeType":"98","messageId":"99","endLine":4,"endColumn":10},{"ruleId":"96","severity":1,"message":"110","line":6,"column":3,"nodeType":"98","messageId":"99","endLine":6,"endColumn":13},{"ruleId":"96","severity":1,"message":"116","line":14,"column":3,"nodeType":"98","messageId":"99","endLine":14,"endColumn":9},{"ruleId":"96","severity":1,"message":"111","line":17,"column":10,"nodeType":"98","messageId":"99","endLine":17,"endColumn":24},{"ruleId":"96","severity":1,"message":"112","line":17,"column":38,"nodeType":"98","messageId":"99","endLine":17,"endColumn":51},{"ruleId":"96","severity":1,"message":"113","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"114","line":1,"column":28,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"115","line":3,"column":3,"nodeType":"98","messageId":"99","endLine":3,"endColumn":9},{"ruleId":"96","severity":1,"message":"109","line":4,"column":3,"nodeType":"98","messageId":"99","endLine":4,"endColumn":10},{"ruleId":"96","severity":1,"message":"110","line":6,"column":3,"nodeType":"98","messageId":"99","endLine":6,"endColumn":13},{"ruleId":"96","severity":1,"message":"116","line":14,"column":3,"nodeType":"98","messageId":"99","endLine":14,"endColumn":9},{"ruleId":"96","severity":1,"message":"111","line":17,"column":10,"nodeType":"98","messageId":"99","endLine":17,"endColumn":24},{"ruleId":"96","severity":1,"message":"112","line":17,"column":38,"nodeType":"98","messageId":"99","endLine":17,"endColumn":51},{"ruleId":"118","severity":1,"message":"119","line":3,"column":1,"nodeType":"120","messageId":"121","endLine":9,"endColumn":2},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'Router' is defined but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","unexpected","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'AppBar' is defined but never used.","'Hidden' is defined but never used.","'classes' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]